@model Silkways.Models.News
@{
    ViewBag.Title = "AddNews";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-xs-9">
    <h2>Add <strong>News</strong></h2>
</div>
<div class="col-xs-3">
    <input type="button" value="Manage News" style="float:right;" class="btn btn-dark" data-toggle="modal" data-target="#modal-select" onclick="location.href = '/News/ManageNews'">
</div>
<style>
    .scrollC {
        overflow-x: scroll;
    }

    .cropit-image-preview {
        background-color: #f8f8f8;
        background-size: cover;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-top: 7px;
        width: 550px;
        height: 327px;
        cursor: move;
    }

    .cropit-image-background {
        opacity: .2;
        cursor: auto;
    }

    .image-size-label {
        margin-top: 10px;
    }

    input {
        display: block;
    }

    .export {
        margin-top: 10px;
    }
</style>
@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>*@
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>
    function createUrl(evt) {

        debugger;

        var Value = $("#Heading").val();
        Value = Value.toLowerCase();
        Value = Value.replace(/[^A-Z0-9]/ig, "-");
        Value = Value.replace("---", "-");
        Value = Value.replace("--", "-");
        $("#Url").val(Value);
    }
</script>

<script>
    $(document).ready(function () {


        //var DT = $('#GetDate').val();
        //$('#datePicker').val(new Date(DT));
        debugger;

        $('.fromDates').datepicker({
            maxDate: '0',
            dateFormat: "dd/mm/yy",
            timeFormat: "hh:mm:ss", 
            changeYear: true,
            changeMonth: true,
            yearRange: "-100:+0"
        });
        //var myDateVal = moment('${value}').format('DD/MM/YYYY');
        var myDateVal = $('#GetDate').val();
        $('#myDate').datepicker('setDate', new Date(myDateVal));


        $("#imgBlock").hide();
        $("#file").click(function () {
            debugger;
            $("#imgBlock").show();
            //$(".image-editor").addClass("scrollC");
        });
        $('.image-editor').cropit();

        $('#FormUser').submit(function () {
            debugger;
            // Move cropped image data to hidden input
            var imageData = $('.image-editor').cropit('export');
            $('.hidden-image-data').val(imageData);

            document.getElementById('Image').value = imageData;
            return true;
        });
    });
</script>


<form method="post" enctype="multipart/form-data" id="FormUser">

    <div class="row">
        <div class="col-lg-12 portlets">
            <div class="panel">
                <div class="panel-content">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">News Title </label>
                                @Html.TextBoxFor(x => x.Heading, new { @placeholder = "Enter Heading", @class = "form-control", @required = "required", @onkeyup = "return createUrl(event)" })
                            </div>

                            <div class="form-group">
                                <label class="form-label">Url</label>
                                @*@Html.TextBoxFor(x => x.Url, new { @placeholder = " Url", @class = "form-control", @required = "required"  })*@

                                @if (Model != null)

                                {
                                                                       
                                    <input class="form-control" type="text" name="Url" value="@Model.Url" id="Url" readonly />
                                }

                                else

                                {

                                    <input class="form-control" type="text" name="Url" value="" id="Url" readonly />

                                }

                            </div>

                            @*@Html.HiddenFor(m => m.Image)*@
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">MetaTitle</label>
                                @Html.TextBoxFor(x => x.MetaTitle, new { @placeholder = "Enter MetaTitle", @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label class="form-label">MetaKeyword</label>
                                @Html.TextBoxFor(x => x.MetaKeyword, new { @placeholder = "Enter MetaKeyword", @class = "form-control" })
                            </div>


                            @if (Model != null)

                            {

                                <input class="form-control date-picker" type="text" name="DateTime" id="GetDate" value="@Model.DateTime"  hidden/>


                                @*<input class="form-control date-picker fromDates" name="DateTime" id="myDate" type="text" placeholder="Select Date">*@


                            }



                            <div class="form-group">
                                <label class="form-label">Select Date </label>
                                @*@Html.EditorFor(x => x.DateTime, new { @placeholder = "Select Date " })*@
                                @*<input type="date" id="datePicker" name="DateTime">*@

                                <input class="form-control date-picker fromDates" name="DateTime" id="myDate" type="text" placeholder="Select Date">

                            </div>









                            <div class="form-group">
                                <label class="form-label">MetaDescription</label>
                                @Html.TextAreaFor(x => x.MetaDescription, new { @placeholder = "Enter MetaDescription", rows = "6", cols = "10", @class = "form-control" })
                            </div>

                            <div class="form-group">
                                <label class="form-label">Short Desciption</label>
                                @Html.TextBoxFor(x => x.ShortDescription, new { @placeholder = "Enter Short MetaKeyword", @class = "form-control" })
                            </div>

                        </div>
                    </div>
                    <div>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control ckeditor", @id = "editorid" })
                    </div>
                    <div class="form-group">
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <p><strong>Image uploader</strong></p>
                            <div id="uploaderrr" class="fileinput-new thumbnail">
                                @{
                                    if (Model != null)
                                    {
                                        <img data-src="" src="@Model.Image" class="img-responsive" style="height:327px; width:550px" alt="gallery 3">
                                    }
                                    else
                                    {
                                        <img data-src="" src="~/Resources/News/NoImage.jpg" style="height:327px; width:550px" class="img-responsive" alt="gallery 3">
                                    }
                                }
                            </div>

                        </div>

                    </div>

                    <div class="form-group">
                        <div class="image-editor">
                            <input type="file" class="cropit-image-input" name="file" id="file">
                            <div id="imgBlock">
                                <div class="cropit-image-preview"></div>
                                @*<div class="image-size-label">
                                        Resize image
                                    </div>*@
                                @*<input type="range" class="cropit-image-zoom-input">*@
                                <input type="hidden" name="Image" id="Image" class="hidden-image-data" />
                            </div>
                        </div>

                    </div>
                    <div>
                        @{
                            string Text = "Add News";
                            if (Model != null)
                            {
                                Text = "Update News";
                            }
                        }


                        <input type="submit" id="btnSave" @*onclick=" this.form.submit(); this.disabled = true; GetImageNameInHiddenBox(); "*@ class=" btn btn-dark" value="@Text" name="Save" />
                    </div>
                </div>

            </div>
        </div>
    </div>

</form>