@{
    ViewBag.Title = "ScholarshipMembers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-xs-9">
    <h2>Import<strong> Subcribers</strong></h2>
</div>


<div id="app">
    <div class="row">
        <div class="col-lg-12 portlets">
            <div class="panel">
                <div class="panel-content">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Import By Excel</label>
                                <input type="file" id="fileUploader" name="fileUploader" accept=".xls, .xlsx" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Import By Text File(Seperated by comma(,)</label>
                                <input type="file" name="inputfile"
                                       id="inputfile" class="form-control">
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>



    <div class="row" v-if="screen==='enabled'">

        <div class="col-lg-12 portlets">
            <div class="panel">
                <div class="panel-content pagination2 table-responsive">
                    <h1> <strong>{{valid.length}} Emails Valid Imported</strong></h1>
                   
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Sr.no</th>
                                <th>Emails</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,index) in valid">
                                <td>{{index+1}}</td>
                                <td>{{item.Email}}</td>
                                <td>{{item.status}}</td>
                                <td><button v-on:click="Delete(item.ID)">Delete</button></td>
                            </tr>
                        </tbody>
                    </table>

                </div>
               
            </div>
        </div>
    </div>
    <div class="row" v-if="screen==='enabled'">

        <div class="col-lg-12 portlets">
            <div class="panel">
                <div class="panel-content pagination2 table-responsive">
                  <h1><strong>{{unvalid.length}} Emails UnValid </strong></h1>  
                    <h4>Note:Edit InValid Emails and Try Again</h4>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Sr.no</th>
                                <th>Emails</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,index) in unvalid">
                                <td>{{index+1}}</td>
                                <td><input class="form-control" v-model="item.Email" /></td>
                                <td>{{item.status}}</td>
                                <td><button v-on:click="Delete2(index,item.Email)">Try Again</button></td>
                            </tr>
                        </tbody>
                    </table>

                </div>
                <div class="panel-footer">
                    <button v-on:click="Save2()" class="pull-right btn btn-primary">Import InValid Emails</button>
                </div>
            </div>
        </div>
    </div>

</div>














<script src="~/Scripts/vue.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<script src="~/Scripts/jquery.js"></script>
<script src="~/Scripts/xlsx.full.min.js"></script>
@*<script src="~/Scripts/vue-pagination-2.min.js"></script>*@
<script>
    //Vue.component('v-select', VueSelect.VueSelect)
    var app = new Vue({
        el: '#app',
        //components: {
        //    Pagination
        //},
        data: {
            data2: [], screen: 'default',result:'',valid:[],unvalid:[]
        },
        created: function () {


        },
        updated: function () {

            //$('#table1').DataTable();

        },
        methods: {
            import2() {
                this.screen = "enabled";
                var vm = this;
                axios.post('/Subscriber/saveexcel2', {

                    obj: vm.result,



                })
                    .then(function (response) {
                        var data = response.data["valid"];
                        for (v in data) {
                            vm.valid.push({
                                Email: data[v].Email,
                                ID: data[v].ID,
                                status: data[v].status,
                            });
                        }
                        var data2 = response.data["nonvalid"];
                        for (v in data2) {
                            vm.unvalid.push({
                                Email: data2[v].Email,
                                status: data2[v].status,
                            });
                        }
                      

                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                alert("Successfully Uploaded");
            },
            import3() {
                var vm = this;
                axios.post('/Subscriber/saveexcel2', {

                    obj: vm.result,



                })
                    .then(function (response) {
                        var data = response.data["valid"];
                        for (v in data) {
                            vm.valid.push({
                                Email: data[v].Email,
                                ID: data[v].ID
                            });
                        }
                        var data2 = response.data["nonvalid"];
                        for (v in data2) {
                            vm.unvalid.push({
                                Email: data2[v].Email
                            });
                        }
                        alert("Successfully Completed");

                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            Save2() {
                //var status = document.getElementById("mySel").value;
                var vm = this;
                axios.post('/Subscriber/saveexcel', {

                    obj: vm.unvalid,



                })
                    .then(function (response) {
                        debugger;
                        vm.unvalid = [];
                        var data = response.data["valid"];
                        for (v in data) {
                            vm.valid.push({
                                Email: data[v].Email,
                                ID: data[v].ID,
                                status: data[v].status,
                            });
                        }
                        var data2 = response.data["nonvalid"];
                        for (v in data2) {
                            vm.unvalid.push({
                                Email: data2[v].Email,
                                status: data2[v].status,
                            });
                        }
                      

                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            Delete(index, ID) {
                debugger;
                this.valid.splice(index, 1);
                var vm = this;
                axios.post('/Subscriber/delete', {

                    ID: ID,



                })
                    .then(function (response) {
                        
                        alert("Successfully Deleted");

                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            Delete2(ID, email) {
                var vm = this;
                axios.post('/Subscriber/onebyone', {

                    obj: email,



                })
                    .then(function (response) {
                        var st = response.data["status"];
                        if (st == "true") {
                            var ids = response.data["ID"];
                            vm.valid.push({
                                Email: email,
                                ID: ids,
                                status:'Imported'
                            });
                            vm.unvalid.splice(ID, 1);
                        }
                        else if (st == "double")
                        {
                            alert("Already Exist");
                            vm.unvalid[ID].status = 'Already Exist';
                        }
                        else {
                            vm.unvalid[ID].status = 'Invalid Email';
                            alert("Invalid Email");
                        }

                          

                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                
            },
            import() {
                //var status = document.getElementById("mySel").value;
                var vm = this;
                axios.post('/Subscriber/saveexcel', {

                    obj: vm.data2,
                  


                })
                    .then(function (response) {
                        var data = response.data["valid"];
                        for (v in data) {
                            vm.valid.push({
                                Email: data[v].Email,
                                ID: data[v].ID,
                                status: data[v].status,
                            });
                        }
                        var data2 = response.data["nonvalid"];
                        for (v in data2) {
                            vm.unvalid.push({
                                Email: data2[v].Email,
                                status: data2[v].status,
                            });
                        }
                       

                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                alert("Successfully Uploaded");
            },
            Send() {

                var vm = this;
                axios.post('/Contact/Email', {

                    ID: vm.Ino,



                })
                    .then(function (response) {
                        //for (v in vm.data2) {
                        //    if (vm.data2[v].ID == vm.Ino) {
                        //        vm.data2[v].InquiryStatusID = Number(status);
                        //    }
                        //}
                        alert("Successfully Completed");

                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            funcs(ID) {
                var vm = this;
                axios.post('/Contact/changestatus', {


                    ID: vm.data2[ID].ID

                })
                    .then(function (response) {
                        debugger;
                        if (response.data === "true") {
                            vm.data2[ID].InquiryStatusID = 3;


                        }
                        else {

                        }
                        vm.Ino = vm.data2[ID].ID;
                        vm.Idate = vm.convert(vm.data2[ID].Date);
                        vm.Iname = vm.data2[ID].Name;
                        vm.Icompanyname = vm.data2[ID].Company_name;
                        vm.Iemail = vm.data2[ID].Email;
                        if (vm.data2[ID].InquiryStatusID === 1) {
                            vm.alt.ID = 1;
                            vm.alt.Name = "New";
                        }
                        else if (vm.data2[ID].InquiryStatusID === 2) {
                            vm.alt.ID = 2;
                            vm.alt.Name = "IN-PROCESS";
                        }
                        else if (vm.data2[ID].InquiryStatusID === 3) {
                            vm.alt.ID = 3;
                            vm.alt.Name = "Open";
                        }
                        else if (vm.data2[ID].InquiryStatusID === 4) {
                            vm.alt.ID = 4;
                            vm.alt.Name = "Failed";
                        }
                        else if (vm.data2[ID].InquiryStatusID === 5) {
                            vm.alt.ID = 5;
                            vm.alt.Name = "Success";
                        }
                        else if (vm.data2[ID].InquiryStatusID === 6) {
                            vm.alt.ID = 6;
                            vm.alt.Name = "Void";
                        }

                        vm.Istatus = vm.data2[ID].InquiryStatusID;
                        vm.Isourcepath = vm.data2[ID].SourceURL;
                        vm.Imessage = vm.data2[ID].Message;


                    })
                    .catch(function (error) {
                        console.log(error);
                    });




            },
            GetImageNameInHiddenBox(ID) {

                $("#DeleteLink").attr("href", "/contact/Delete?ID=" + ID);
            },


            GetImageNameInHiddenBox2(ID) {

                $("#DeleteLink").attr("href", "/contact/Delete?ID=" + ID);
            },
            loaddata() {

                var status = document.getElementById("mySelect").value;
                this.page = 1;
                this.indexing = 0;
                this.btn = "enabled";

                if (this.DateFrom == "" && this.DateTo == "" && this.number == "" && this.name == "" && status == "") {



                    var vm = this;
                    axios.post('/Contact/getmembers2', {


                        page: vm.page

                    })
                        .then(function (response) {
                            vm.data2 = "";
                            vm.data2 = response.data["result"];
                            vm.total = response.data["count"];
                            //var table = $('#table1').DataTable();


                            // table.destroy();
                            vm.btn = "default";

                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                }



                else {
                    if (this.DateFrom == "" && this.DateTo == "") {
                        var vm = this;
                        axios.post('/Contact/getmembers5', {
                            name: vm.name,
                            status: status,
                            number: vm.number,

                            page: vm.page

                        })
                            .then(function (response) {
                                vm.data2 = "";
                                vm.data2 = response.data["result"];
                                vm.total = response.data["count"];

                                vm.btn = "default";

                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                    }
                    else {
                        var vm = this;
                        axios.post('/Contact/getmembers', {
                            name: vm.name,
                            status: status,
                            number: vm.number,
                            DateFrom: vm.DateFrom,
                            DateTo: vm.DateTo,
                            page: vm.page

                        })
                            .then(function (response) {
                                vm.data2 = "";
                                vm.data2 = response.data["result"];
                                vm.total = response.data["count"];

                                vm.btn = "default";

                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                    }

                }

            },
            convert(Dates) {


                if (Dates != null) {
                    var vm = this;
                    var pattern = /Date\(([^)]+)\)/;

                    var results = pattern.exec(Dates);

                    var dt = new Date(parseFloat(results[1]));

                    Dates = dt.getDate() + "-" + vm.months[dt.getMonth()] + "-" + dt.getFullYear();


                    return Dates;
                }
                else {
                    return "";
                }

            },
            Detail(ID) {

            },


            callback: function (page) {

                var status = document.getElementById("mySelect").value;
                this.btn = "enabled";
                if (this.DateFrom == "" && this.DateTo == "" && this.number == "" && this.name == "" && status == "") {



                    var vm = this;
                    axios.post('/Contact/getmembers2', {


                        page: vm.page

                    })
                        .then(function (response) {
                            vm.indexing = (vm.page - 1) * 10;
                            vm.data2 = "";
                            vm.data2 = response.data["result"];
                            vm.total = response.data["count"];
                            //var table = $('#table1').DataTable();


                            // table.destroy();
                            vm.btn = "default";

                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                }



                else {
                    if (this.DateFrom == "" && this.DateTo == "") {
                        var vm = this;
                        axios.post('/Contact/getmembers5', {
                            name: vm.name,
                            status: status,
                            number: vm.number,

                            page: vm.page

                        })
                            .then(function (response) {
                                vm.indexing = (vm.page - 1) * 10;
                                vm.data2 = "";
                                vm.data2 = response.data["result"];
                                vm.total = response.data["count"];
                                vm.btn = "default";
                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                    }
                    else {
                        var vm = this;
                        axios.post('/Contact/getmembers', {
                            name: vm.name,
                            status: status,
                            number: vm.number,
                            DateFrom: vm.DateFrom,
                            DateTo: vm.DateTo,
                            page: vm.page

                        })
                            .then(function (response) {
                                vm.indexing = (vm.page - 1) * 10;
                                vm.data2 = "";
                                vm.data2 = response.data["result"];
                                vm.total = response.data["count"];
                                vm.btn = "default";

                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                    }

                }
            }


        }
    });
</script>
<script>
    $(document).ready(function () {
        $("#fileUploader").change(function (evt) {
            debugger;
            var selectedFile = evt.target.files[0];
            var reader = new FileReader();
            reader.onload = function (event) {
                var data = event.target.result;
                var workbook = XLSX.read(data, {
                    type: 'binary'
                });
                console.log(workbook);
                workbook.SheetNames.forEach(function (sheetName) {

                    var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    var json_object = JSON.stringify(XL_row_object);
                    //document.getElementById("jsonObject").innerHTML = json_object;
                    app.data2 = XL_row_object;
                    app.screen = "enabled";
                    var table = $('#table').DataTable();


                    table.destroy();
                    app.import();




                })
            };

            reader.onerror = function (event) {
                console.error("File could not be read! Code " + event.target.error.code);
            };

            reader.readAsBinaryString(selectedFile);

        });
    });
</script>
<script type="text/javascript">
    document.getElementById('inputfile')
        .addEventListener('change', function () {

            var fr = new FileReader();
            fr.onload = function () {
                app.result = fr.result;
                app.import2();
            }
          
            fr.readAsText(this.files[0]);
        })
</script>
