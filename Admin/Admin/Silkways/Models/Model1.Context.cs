//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Silkways.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GaintShoeBoxEntities : DbContext
    {
        public GaintShoeBoxEntities()
            : base("name=GaintShoeBoxEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AboutU> AboutUs { get; set; }
        public virtual DbSet<BookRequest> BookRequests { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<ContactU> ContactUs { get; set; }
        public virtual DbSet<ContactUs2> ContactUs2 { get; set; }
        public virtual DbSet<ContentPage> ContentPages { get; set; }
        public virtual DbSet<ContentUnit> ContentUnits { get; set; }
        public virtual DbSet<DliveryStatu> DliveryStatus { get; set; }
        public virtual DbSet<FAQ> FAQs { get; set; }
        public virtual DbSet<Gallery> Galleries { get; set; }
        public virtual DbSet<GalleryCategory> GalleryCategories { get; set; }
        public virtual DbSet<GalleryPhoto> GalleryPhotos { get; set; }
        public virtual DbSet<HomePageImage> HomePageImages { get; set; }
        public virtual DbSet<InquiryStatu> InquiryStatus { get; set; }
        public virtual DbSet<InquiryStatus2> InquiryStatus2 { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<JobApplication> JobApplications { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderShippingDetail> OrderShippingDetails { get; set; }
        public virtual DbSet<OtherImage> OtherImages { get; set; }
        public virtual DbSet<OurApproach> OurApproaches { get; set; }
        public virtual DbSet<PanelMenu> PanelMenus { get; set; }
        public virtual DbSet<PanelMenuLink> PanelMenuLinks { get; set; }
        public virtual DbSet<PanelMenuUserRelation> PanelMenuUserRelations { get; set; }
        public virtual DbSet<PaymentMode> PaymentModes { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<PolicyCategory> PolicyCategories { get; set; }
        public virtual DbSet<PracticeArea> PracticeAreas { get; set; }
        public virtual DbSet<ProductBrand> ProductBrands { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductCategory1> ProductCategories1 { get; set; }
        public virtual DbSet<ProductPhoto> ProductPhotos { get; set; }
        public virtual DbSet<ProductSize> ProductSizes { get; set; }
        public virtual DbSet<ProfileImage> ProfileImages { get; set; }
        public virtual DbSet<ProfileVideo> ProfileVideos { get; set; }
        public virtual DbSet<Publication> Publications { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<ShippingProductDetail> ShippingProductDetails { get; set; }
        public virtual DbSet<SocialMedia> SocialMedias { get; set; }
        public virtual DbSet<Subscriber> Subscribers { get; set; }
        public virtual DbSet<SystemSetting> SystemSettings { get; set; }
        public virtual DbSet<tblBanner> tblBanners { get; set; }
        public virtual DbSet<tblCity> tblCities { get; set; }
        public virtual DbSet<tblColor> tblColors { get; set; }
        public virtual DbSet<tblMember> tblMembers { get; set; }
        public virtual DbSet<tblPage> tblPages { get; set; }
        public virtual DbSet<tblProductColor> tblProductColors { get; set; }
        public virtual DbSet<tblSlider> tblSliders { get; set; }
        public virtual DbSet<tblTeamMember> tblTeamMembers { get; set; }
        public virtual DbSet<tblVideo> tblVideos { get; set; }
        public virtual DbSet<TechnologyProfile> TechnologyProfiles { get; set; }
        public virtual DbSet<Testimonial> Testimonials { get; set; }
        public virtual DbSet<URLBasedCMSPage> URLBasedCMSPages { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Feature> Features { get; set; }
        public virtual DbSet<ProductFeature> ProductFeatures { get; set; }
        public virtual DbSet<Review> Reviews { get; set; }
        public virtual DbSet<OrderCart> OrderCarts { get; set; }
        public virtual DbSet<tblcart> tblcarts { get; set; }
        public virtual DbSet<tblPromoCode> tblPromoCodes { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
    
        public virtual ObjectResult<GetAllBrandsForHome_Result> GetAllBrandsForHome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBrandsForHome_Result>("GetAllBrandsForHome");
        }
    
        public virtual int GetAllCities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllCities");
        }
    
        public virtual ObjectResult<GetAllNews_Result> GetAllNews(Nullable<int> iD, Nullable<int> lower, Nullable<int> uper)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lowerParameter = lower.HasValue ?
                new ObjectParameter("Lower", lower) :
                new ObjectParameter("Lower", typeof(int));
    
            var uperParameter = uper.HasValue ?
                new ObjectParameter("uper", uper) :
                new ObjectParameter("uper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllNews_Result>("GetAllNews", iDParameter, lowerParameter, uperParameter);
        }
    
        public virtual ObjectResult<GetAllProducts_Result> GetAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProducts_Result>("GetAllProducts");
        }
    
        public virtual ObjectResult<GetBrandByCategoryID_Result> GetBrandByCategoryID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBrandByCategoryID_Result>("GetBrandByCategoryID", iDParameter);
        }
    
        public virtual ObjectResult<GetCategoriesByBrand_Result> GetCategoriesByBrand(string brand)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoriesByBrand_Result>("GetCategoriesByBrand", brandParameter);
        }
    
        public virtual ObjectResult<GetCategoryByBrandName_Result> GetCategoryByBrandName(string brand)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryByBrandName_Result>("GetCategoryByBrandName", brandParameter);
        }
    
        public virtual ObjectResult<GetFilterProducts_Result> GetFilterProducts(Nullable<int> categoryID, Nullable<int> colorID, Nullable<decimal> priceForm, Nullable<decimal> priceTo, string size, Nullable<int> orderbyValue, Nullable<int> page)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var colorIDParameter = colorID.HasValue ?
                new ObjectParameter("ColorID", colorID) :
                new ObjectParameter("ColorID", typeof(int));
    
            var priceFormParameter = priceForm.HasValue ?
                new ObjectParameter("priceForm", priceForm) :
                new ObjectParameter("priceForm", typeof(decimal));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("priceTo", priceTo) :
                new ObjectParameter("priceTo", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var orderbyValueParameter = orderbyValue.HasValue ?
                new ObjectParameter("orderbyValue", orderbyValue) :
                new ObjectParameter("orderbyValue", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFilterProducts_Result>("GetFilterProducts", categoryIDParameter, colorIDParameter, priceFormParameter, priceToParameter, sizeParameter, orderbyValueParameter, pageParameter);
        }
    
        public virtual ObjectResult<GetFilterProductsCopy_Result> GetFilterProductsCopy(Nullable<int> categoryID, Nullable<int> colorID, Nullable<decimal> priceForm, Nullable<decimal> priceTo, string size, Nullable<int> orderbyValue, Nullable<int> page)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var colorIDParameter = colorID.HasValue ?
                new ObjectParameter("ColorID", colorID) :
                new ObjectParameter("ColorID", typeof(int));
    
            var priceFormParameter = priceForm.HasValue ?
                new ObjectParameter("priceForm", priceForm) :
                new ObjectParameter("priceForm", typeof(decimal));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("priceTo", priceTo) :
                new ObjectParameter("priceTo", typeof(decimal));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var orderbyValueParameter = orderbyValue.HasValue ?
                new ObjectParameter("orderbyValue", orderbyValue) :
                new ObjectParameter("orderbyValue", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFilterProductsCopy_Result>("GetFilterProductsCopy", categoryIDParameter, colorIDParameter, priceFormParameter, priceToParameter, sizeParameter, orderbyValueParameter, pageParameter);
        }
    
        public virtual ObjectResult<GetListByPriceRange_Result> GetListByPriceRange(string name, Nullable<int> min, Nullable<int> max)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(int));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListByPriceRange_Result>("GetListByPriceRange", nameParameter, minParameter, maxParameter);
        }
    
        public virtual ObjectResult<GetNewListBy_Result> GetNewListBy(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewListBy_Result>("GetNewListBy", nameParameter);
        }
    
        public virtual ObjectResult<GetNewProductsByHighprice_Result> GetNewProductsByHighprice(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewProductsByHighprice_Result>("GetNewProductsByHighprice", nameParameter);
        }
    
        public virtual ObjectResult<GetNewProductsByLowprice_Result> GetNewProductsByLowprice(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewProductsByLowprice_Result>("GetNewProductsByLowprice", nameParameter);
        }
    
        public virtual ObjectResult<GetParentChildCategories_Result> GetParentChildCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetParentChildCategories_Result>("GetParentChildCategories");
        }
    
        public virtual ObjectResult<GetProductBrandsForHome_Result> GetProductBrandsForHome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductBrandsForHome_Result>("GetProductBrandsForHome");
        }
    
        public virtual int GetProductColors(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductColors", iDParameter);
        }
    
        public virtual ObjectResult<GetProductPhotosByProductID_Result> GetProductPhotosByProductID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductPhotosByProductID_Result>("GetProductPhotosByProductID", iDParameter);
        }
    
        public virtual ObjectResult<GetProductsByBrandCategory_Result> GetProductsByBrandCategory(string brand, string category)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByBrandCategory_Result>("GetProductsByBrandCategory", brandParameter, categoryParameter);
        }
    
        public virtual ObjectResult<GetProductsByBrandID_Result> GetProductsByBrandID(Nullable<int> iD, Nullable<int> lower, Nullable<int> uper)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lowerParameter = lower.HasValue ?
                new ObjectParameter("Lower", lower) :
                new ObjectParameter("Lower", typeof(int));
    
            var uperParameter = uper.HasValue ?
                new ObjectParameter("uper", uper) :
                new ObjectParameter("uper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByBrandID_Result>("GetProductsByBrandID", iDParameter, lowerParameter, uperParameter);
        }
    
        public virtual ObjectResult<GetProductsByBrands_Result> GetProductsByBrands(string brandName)
        {
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByBrands_Result>("GetProductsByBrands", brandNameParameter);
        }
    
        public virtual ObjectResult<GetProductsByCategory_Result> GetProductsByCategory(Nullable<int> category)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByCategory_Result>("GetProductsByCategory", categoryParameter);
        }
    
        public virtual ObjectResult<GetProductsByCategoryID_Result> GetProductsByCategoryID(Nullable<int> iD, Nullable<int> lower, Nullable<int> uper)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lowerParameter = lower.HasValue ?
                new ObjectParameter("Lower", lower) :
                new ObjectParameter("Lower", typeof(int));
    
            var uperParameter = uper.HasValue ?
                new ObjectParameter("uper", uper) :
                new ObjectParameter("uper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByCategoryID_Result>("GetProductsByCategoryID", iDParameter, lowerParameter, uperParameter);
        }
    
        public virtual ObjectResult<GetProductsByCategoryIDWithPrice_Result> GetProductsByCategoryIDWithPrice(Nullable<int> iD, Nullable<int> lower, Nullable<int> uper, Nullable<int> min, Nullable<int> max)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var lowerParameter = lower.HasValue ?
                new ObjectParameter("Lower", lower) :
                new ObjectParameter("Lower", typeof(int));
    
            var uperParameter = uper.HasValue ?
                new ObjectParameter("uper", uper) :
                new ObjectParameter("uper", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("Min", min) :
                new ObjectParameter("Min", typeof(int));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("Max", max) :
                new ObjectParameter("Max", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByCategoryIDWithPrice_Result>("GetProductsByCategoryIDWithPrice", iDParameter, lowerParameter, uperParameter, minParameter, maxParameter);
        }
    
        public virtual ObjectResult<GetProductsColorNames_Result> GetProductsColorNames(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsColorNames_Result>("GetProductsColorNames", productIDParameter);
        }
    
        public virtual ObjectResult<GetProductsFilters_Result> GetProductsFilters(string whereClause)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsFilters_Result>("GetProductsFilters", whereClauseParameter);
        }
    
        public virtual int GetProductsForFilters(string whereClause)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductsForFilters", whereClauseParameter);
        }
    
        public virtual int GetProductsForSearch(string whereClause)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductsForSearch", whereClauseParameter);
        }
    
        public virtual ObjectResult<GetRelatedProducts_Result> GetRelatedProducts(Nullable<int> brandName)
        {
            var brandNameParameter = brandName.HasValue ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRelatedProducts_Result>("GetRelatedProducts", brandNameParameter);
        }
    }
}
